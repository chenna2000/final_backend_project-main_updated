# Generated by Django 4.2.11 on 2024-07-24 08:16

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyInCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(default='null', max_length=255)),
                ('official_email', models.EmailField(default='Null', max_length=254, unique=True)),
                ('country_code', models.CharField(default='+91', max_length=3)),
                ('mobile_number', models.CharField(default='Null', max_length=15)),
                ('password', models.CharField(default='null', max_length=128)),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('company_person_name', models.CharField(default='Null', max_length=255)),
                ('agreed_to_terms', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Consultant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultant_name', models.CharField(default='Null', max_length=255)),
                ('official_email', models.EmailField(default='Null', max_length=254, unique=True)),
                ('country_code', models.CharField(default='+91', max_length=3)),
                ('mobile_number', models.CharField(default='Null', max_length=15)),
                ('password', models.CharField(default='null', max_length=128)),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('consultant_person_name', models.CharField(default='Null', max_length=255)),
                ('agreed_to_terms', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Forgot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Forgot2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=12)),
                ('confirm_password', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='new_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=20)),
                ('lastname', models.CharField(max_length=20)),
                ('country_code', models.CharField(default='IN', max_length=5)),
                ('phonenumber', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=100)),
                ('course', models.CharField(default='', max_length=50)),
                ('education', models.CharField(default='Not specified', max_length=20)),
                ('percentage', models.CharField(default='0', max_length=10)),
                ('preferred_destination', models.CharField(default='Not specified', max_length=20)),
                ('start_date', models.CharField(max_length=4)),
                ('entrance', models.CharField(default='N/A', max_length=5)),
                ('passport', models.CharField(default='None', max_length=5)),
                ('mode_study', models.CharField(default='None', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('otp', models.CharField(max_length=6)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UniversityInCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_name', models.CharField(max_length=255)),
                ('official_email', models.EmailField(default='Null', max_length=254, unique=True)),
                ('country_code', models.CharField(default='+91', max_length=3)),
                ('mobile_number', models.CharField(default='Null', max_length=15)),
                ('password', models.CharField(default='null', max_length=128)),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('college_person_name', models.CharField(default='Null', max_length=255)),
                ('agreed_to_terms', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Verify',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_subadmin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
